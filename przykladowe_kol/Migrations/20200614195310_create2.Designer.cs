// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using przykladowe_kol.Models;

namespace przykladowe_kol.Migrations
{
    [DbContext(typeof(ConfectioneryShopDbContext))]
    [Migration("20200614195310_create2")]
    partial class create2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("przykladowe_kol.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdClient");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            Name = "Adam",
                            Surname = "Adamowski"
                        },
                        new
                        {
                            IdClient = 2,
                            Name = "Marian",
                            Surname = "Pazdzioch"
                        },
                        new
                        {
                            IdClient = 3,
                            Name = "Ferdynand",
                            Surname = "Kiepski"
                        },
                        new
                        {
                            IdClient = 4,
                            Name = "Arnold",
                            Surname = "Boczek"
                        });
                });

            modelBuilder.Entity("przykladowe_kol.Models.Employee", b =>
                {
                    b.Property<int>("IdEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdEmployee");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            IdEmployee = 1,
                            Name = "Marcin",
                            Surname = "Olejnik"
                        },
                        new
                        {
                            IdEmployee = 2,
                            Name = "Tomasz",
                            Surname = "Pulawski"
                        },
                        new
                        {
                            IdEmployee = 3,
                            Name = "Tomasz",
                            Surname = "Siedlecki"
                        },
                        new
                        {
                            IdEmployee = 4,
                            Name = "Anna",
                            Surname = "Karenina"
                        });
                });

            modelBuilder.Entity("przykladowe_kol.Models.Order", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataPrzyjecia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRealizacji")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("IdOrder");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdEmployee");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            IdOrder = 1,
                            DataPrzyjecia = new DateTime(2020, 6, 14, 21, 53, 10, 211, DateTimeKind.Local).AddTicks(8328),
                            DataRealizacji = new DateTime(2020, 6, 18, 21, 53, 10, 217, DateTimeKind.Local).AddTicks(6970),
                            IdClient = 1,
                            IdEmployee = 1
                        },
                        new
                        {
                            IdOrder = 2,
                            DataPrzyjecia = new DateTime(2020, 6, 14, 21, 53, 10, 218, DateTimeKind.Local).AddTicks(73),
                            DataRealizacji = new DateTime(2020, 6, 19, 21, 53, 10, 218, DateTimeKind.Local).AddTicks(114),
                            IdClient = 1,
                            IdEmployee = 1
                        },
                        new
                        {
                            IdOrder = 3,
                            DataPrzyjecia = new DateTime(2020, 6, 14, 21, 53, 10, 218, DateTimeKind.Local).AddTicks(217),
                            DataRealizacji = new DateTime(2020, 6, 20, 21, 53, 10, 218, DateTimeKind.Local).AddTicks(224),
                            IdClient = 2,
                            IdEmployee = 2
                        },
                        new
                        {
                            IdOrder = 4,
                            DataPrzyjecia = new DateTime(2020, 6, 14, 21, 53, 10, 218, DateTimeKind.Local).AddTicks(232),
                            DataRealizacji = new DateTime(2020, 6, 21, 21, 53, 10, 218, DateTimeKind.Local).AddTicks(237),
                            IdClient = 3,
                            IdEmployee = 3
                        },
                        new
                        {
                            IdOrder = 5,
                            DataPrzyjecia = new DateTime(2020, 6, 14, 21, 53, 10, 218, DateTimeKind.Local).AddTicks(244),
                            DataRealizacji = new DateTime(2020, 6, 22, 21, 53, 10, 218, DateTimeKind.Local).AddTicks(249),
                            IdClient = 4,
                            IdEmployee = 3
                        },
                        new
                        {
                            IdOrder = 6,
                            DataPrzyjecia = new DateTime(2020, 6, 14, 21, 53, 10, 218, DateTimeKind.Local).AddTicks(263),
                            DataRealizacji = new DateTime(2020, 6, 23, 21, 53, 10, 218, DateTimeKind.Local).AddTicks(268),
                            IdClient = 4,
                            IdEmployee = 4
                        });
                });

            modelBuilder.Entity("przykladowe_kol.Models.Order_Product", b =>
                {
                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int?>("OrderIdOrder")
                        .HasColumnType("int");

                    b.Property<int?>("ProductIdProduct")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("IdOrder", "IdProduct");

                    b.HasIndex("OrderIdOrder");

                    b.HasIndex("ProductIdProduct");

                    b.ToTable("Order_Product");

                    b.HasData(
                        new
                        {
                            IdOrder = 1,
                            IdProduct = 1,
                            Quantity = 5
                        },
                        new
                        {
                            IdOrder = 2,
                            IdProduct = 1,
                            Quantity = 10
                        },
                        new
                        {
                            IdOrder = 3,
                            IdProduct = 2,
                            Quantity = 1
                        },
                        new
                        {
                            IdOrder = 4,
                            IdProduct = 2,
                            Quantity = 1
                        },
                        new
                        {
                            IdOrder = 5,
                            IdProduct = 3,
                            Quantity = 2
                        },
                        new
                        {
                            IdOrder = 6,
                            IdProduct = 4,
                            Quantity = 4
                        });
                });

            modelBuilder.Entity("przykladowe_kol.Models.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<float>("PricePerUnit")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("IdProduct");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            IdProduct = 1,
                            Name = "Paczek",
                            PricePerUnit = 3.4f,
                            Type = "small"
                        },
                        new
                        {
                            IdProduct = 2,
                            Name = "Tort",
                            PricePerUnit = 30f,
                            Type = "large"
                        },
                        new
                        {
                            IdProduct = 3,
                            Name = "Szarotka",
                            PricePerUnit = 25.5f,
                            Type = "large"
                        },
                        new
                        {
                            IdProduct = 4,
                            Name = "Wuzetka",
                            PricePerUnit = 1.5f,
                            Type = "small"
                        });
                });

            modelBuilder.Entity("przykladowe_kol.Models.Order", b =>
                {
                    b.HasOne("przykladowe_kol.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("przykladowe_kol.Models.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("przykladowe_kol.Models.Order_Product", b =>
                {
                    b.HasOne("przykladowe_kol.Models.Order", "Order")
                        .WithMany("OrdersProducts")
                        .HasForeignKey("OrderIdOrder");

                    b.HasOne("przykladowe_kol.Models.Product", "Product")
                        .WithMany("OrdersProducts")
                        .HasForeignKey("ProductIdProduct");
                });
#pragma warning restore 612, 618
        }
    }
}
